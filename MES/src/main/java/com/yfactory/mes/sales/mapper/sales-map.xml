<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yfactory.mes.sales.mapper.SalesMapper">

	<!-- 주문서 조회 -->
	<select id="selectOrderList" resultType="map">
		SELECT                  ord.ord_cd  "주문코드" , 
					   TO_CHAR(ord.req_dt,'YYYY-MM-DD') "주문일자",
					   TO_CHAR(ord.res_dt,'YYYY-MM-DD') "납기일자",					   
					   sum(ordtl.ord_qty) "주문수량",
					   vdr.vdr_nm "업체명",					   
					   cd.cd_explan "진행상황"
		FROM 
					   ORDERS ord, 
					   VENDOR vdr, 
					   ORD_DTL ordtl, 
					   COMM_CODE cd
		WHERE     		ord.vdr_cd = vdr.vdr_cd
		AND      		ord.ord_cd = ordtl.ord_cd		
		AND      		cd.comm_cd = ord.prog_cd
		group by        ord.ord_cd, 
					   ord.req_dt,
					   ord.res_dt,					   					   
					   vdr.vdr_nm,
					   cd.cd_explan
        ORDER BY		ord.ord_cd DESC
	</select>
	
	<!-- BOM 조회 -->
	<select id="selectBomList" resultType="map">
	SELECT 		 		b.bom_cd "BOM 코드",
						b.mt_cd "원자재 코드", 
				  		m.mt_nm "원자재명", 
				 		b.cs_qty "소요량"
	FROM 		    bom b,
			            prod pd, 
			            mt m
	WHERE 		b.prod_cd = pd.prod_cd
	AND 			b.mt_cd = m.mt_cd
	AND			b.prod_cd = #{key}
	</select>
	
	<!-- BOM 수정 -->
	<update id="updateBom" parameterType="map">
	UPDATE 	BOM
	SET 	CS_QTY = #{mNum}
	WHERE 	BOM_CD LIKE #{bom}
	AND 	MT_CD LIKE #{mcd}
	</update>
	
	<!-- 주문서 검색 -->
	<select id="searchOrderList" resultType="map">
		SELECT                  ord.ord_cd  "주문코드" , 
					   TO_CHAR(ord.req_dt,'YYYY-MM-DD') "주문일자",
					   TO_CHAR(ord.res_dt,'YYYY-MM-DD') "납기일자",					   
					   sum(ordtl.ord_qty) "주문수량",
					   vdr.vdr_nm "업체명",					   
					   cd.cd_explan "진행상황"
		FROM 
					   ORDERS ord, 
					   VENDOR vdr, 
					   ORD_DTL ordtl,
					   COMM_CODE cd
		WHERE     		ord.vdr_cd = vdr.vdr_cd
		AND      		ord.ord_cd = ordtl.ord_cd		
		AND      		cd.comm_cd = ord.prog_cd
        <if test="vnm != ''">
        AND      	   vdr.vdr_cd LIKE '%'||#{vcd}||'%'
        </if>
        <if test="vcd == '' and vnm != ''">
        AND      	   vdr.vdr_nm LIKE '%'||#{vnm}||'%'
        </if>
        <if test="req1 != '' and req2 != ''">        
        AND      ord.req_dt between TO_DATE(#{req1},'YYYY-MM-DD') AND TO_DATE(#{req2},'YYYY-MM-DD')
        </if>
        <if test="res1 != '' and res2 != ''">
        AND      ord.res_dt between TO_DATE(#{res1},'YYYY-MM-DD') AND TO_DATE(#{res2},'YYYY-MM-DD')
        </if>
        <if test="key == 1">
        AND      cd_explan NOT LIKE '출고처리완료'
        </if>
        <if test="key == 2">
        AND      cd_explan LIKE '출고처리완료'
        </if>
        <if test="key == 3">        
        </if>
		GROUP BY        ord.ord_cd, 
					   ord.req_dt,
					   ord.res_dt,					   					   
					   vdr.vdr_nm,
					   cd.cd_explan
        
        ORDER BY		ord.ord_cd DESC
	</select>
	
	<!-- 주문서 상세 조회 -->
	<select id="ordtlModalList" resultType="map">
		select  ordtl.ordtl_cd "주문상세코드",
		        pd.prod_nm "제품명", 
		        ord_qty "주문량",
		        cd.cd_explan "진행상황"
		from    ord_dtl ordtl, orders ord, prod pd, comm_code cd
		where   ordtl.ord_cd = ord.ord_cd
		and     pd.prod_cd = ordtl.prod_cd
		and     cd.comm_cd = ordtl.prog_cd
		and		ordtl.ord_cd = #{key}
	</select>
	
	<!-- 완제품LOT조회 -->
	<select id="selectProdLotList" resultType="map">
		SELECT		pdlot.prod_lot AS "완제품LOT",
					pdlot.prod_cd AS "제품코드",
					pd.prod_nm AS "제품명",
					pdc.prod_qty AS "완제품수량",
        			TO_CHAR(pdlot.prod_fdt,'YYYY-MM-DD') AS "제조일자",
        			TO_CHAR(pdlot.prod_exp,'YYYY-MM-DD') AS "유통기한",
        			pd.prod_sfqty AS "안전수량",
        			pd.prod_unit AS "단위"
		FROM		prod pd, prod_lot pdlot, prod_curqty pdc
		WHERE		pd.prod_cd = pdlot.prod_cd
		AND     	pdlot.prod_lot = pdc.prod_lot
		ORDER BY	pdlot.prod_fdt DESC;    
	</select>
	
	<!-- 완제품LOT검색 -->
	<select id="searchProdLotList" resultType="map">
		SELECT		pdlot.prod_lot AS "완제품LOT",
					pdlot.prod_cd AS "제품코드",
					pd.prod_nm AS "제품명",
					pdc.prod_qty AS "완제품수량",
        			TO_CHAR(pdlot.prod_fdt,'YYYY-MM-DD') AS "제조일자",
        			TO_CHAR(pdlot.prod_exp,'YYYY-MM-DD') AS "유통기한",
        			pd.prod_sfqty AS "안전수량",
        			pd.prod_unit AS "단위"
		FROM		prod pd, prod_lot pdlot, prod_curqty pdc
		WHERE		pd.prod_cd = pdlot.prod_cd
		AND     	pdlot.prod_lot = pdc.prod_lot
		<if test="pcd != ''">
		AND			pdlot.prod_cd LIKE #{pcd}
		</if>
		<if test="pcd == '' and pnm != ''">
		AND		    pd.prod_nm LIKE #{pnm}
		</if>		
		<if test="fdt1 != '' and fdt2 != ''">
		AND		    pdlot.prod_fdt between TO_DATE(#{fdt1},'YYYY-MM-DD') AND TO_DATE(#{fdt2},'YYYY-MM-DD')			
		</if>
		ORDER BY	pdlot.prod_fdt DESC
	</select>
	
	<!-- 완제품modal리스트 -->
	<select id="prodModalList" resultType="map">
		SELECT 		prod_nm AS "제품명",
					prod_cd AS "제품코드"
		FROM   		prod	
	</select>
	
	<!-- 완제품modal 검색 -->
	<select id="prodModalSearch" resultType="map">
		SELECT 		prod_nm AS "제품명",
					prod_cd AS "제품코드"
		FROM   		prod
		WHERE		prod_nm LIKE '%'||#{key}||'%'
	</select>
	
	<!-- 완제품 안전 재고 -->
	<select id="prodSafetyList" resultType="map">
	SELECT      	pdlot.prod_cd AS "제품코드",
               		pd.prod_nm AS "제품명",
                    pd.prod_sfqty AS "안전수량",
                    pd.prod_unit AS "단위",
	                case when pdc.prod_qty  is null then 0
	                 else pdc.prod_qty
	                 end as "완제품수량"
                 
      FROM      	prod pd, prod_lot pdlot, prod_curqty pdc
      WHERE      	pd.prod_cd = pdlot.prod_cd
      AND        	pdlot.prod_lot = pdc.prod_lot(+)
      ORDER BY   	pdlot.prod_fdt DESC
	</select>
	
	<!-- 완제품 안전 재고 검색 -->
	<select id="searchProdSafety" resultType="map">
		SELECT      	pdlot.prod_cd AS "제품코드",
               		pd.prod_nm AS "제품명",
                    pd.prod_sfqty AS "안전수량",
                    pd.prod_unit AS "단위",
	                case when pdc.prod_qty  is null then 0
	                 else pdc.prod_qty
	                 end as "완제품수량"
                 
      	FROM      	prod pd, prod_lot pdlot, prod_curqty pdc
      	WHERE      	pd.prod_cd = pdlot.prod_cd
      	AND        	pdlot.prod_lot = pdc.prod_lot(+)
		<if test="pcd != ''">
		AND			pdlot.prod_cd LIKE #{pcd}
		</if>
		<if test="pcd == '' and pnm != ''">
		AND		    pd.prod_nm LIKE #{pnm}
		</if>
		ORDER BY	pdlot.prod_fdt DESC
	</select>
	
	<!-- 입고 조회 -->
	<select id="prodWrnoteIn" resultType="map">
		SELECT	pdlot.prod_lot AS "완제품LOT",
    	    	pdlot.prod_cd AS "제품코드",
        		pd.prod_nm AS "제품명",
        		pdw.prod_wrqty AS "입고량",
        		TO_CHAR(pdlot.prod_fdt,'YYYY-MM-DD') AS "입고일자",
        		TO_CHAR(pdlot.prod_exp,'YYYY-MM-DD') AS "유통기한"
		FROM	prod pd, prod_lot pdlot, prod_wrnote pdw
		WHERE	pdlot.prod_lot = pdw.prod_lot
		AND	    pd.prod_cd = pdlot.prod_cd
		AND     pdw.wr_cd LIKE 'INOUT01'
		ORDER BY pdlot.prod_fdt DESC
	</select>
	
	<!-- 출고 조회 -->
	<select id="prodWrnoteOut" resultType="map">
		SELECT	pdlot.prod_lot AS "완제품LOT",
    	    	pdlot.prod_cd AS "제품코드",
        		pd.prod_nm AS "제품명",
        		pdw.prod_wrqty AS "출고량",
        		TO_CHAR(pdw.prod_rdt,'YYYY-MM-DD') AS "출고일자",
        		TO_CHAR(pdlot.prod_exp,'YYYY-MM-DD') AS "유통기한"
		FROM	prod pd, prod_lot pdlot, prod_wrnote pdw
		WHERE	pdlot.prod_lot = pdw.prod_lot
		AND	    pd.prod_cd = pdlot.prod_cd
		AND     pdw.wr_cd LIKE 'INOUT02'
		ORDER BY pdw.prod_rdt DESC
	</select>
	
	<!-- 입고 검색 -->
	<select id="searchWrnIn" resultType="map">
		SELECT	pdlot.prod_lot AS "완제품LOT",
    	    	pdlot.prod_cd AS "제품코드",
        		pd.prod_nm AS "제품명",
        		pdw.prod_wrqty AS "입고량",
        		TO_CHAR(pdlot.prod_fdt,'YYYY-MM-DD') AS "입고일자",
        		TO_CHAR(pdlot.prod_exp,'YYYY-MM-DD') AS "유통기한"
		FROM	prod pd, prod_lot pdlot, prod_wrnote pdw
		WHERE	pdlot.prod_lot = pdw.prod_lot
		AND	    pd.prod_cd = pdlot.prod_cd
		AND     pdw.wr_cd LIKE 'INOUT01'
		<if test="pcd != ''">
		AND		pdlot.prod_cd LIKE #{pcd}
		</if>
		<if test="pcd == '' and pnm != ''">
		AND		pd.prod_nm LIKE #{pnm}
		</if>		
		<if test="fdt1 != '' and fdt2 != ''">
		AND		pdlot.prod_fdt between TO_DATE(#{fdt1},'YYYY-MM-DD') AND TO_DATE(#{fdt2},'YYYY-MM-DD')			
		</if>
		ORDER BY pdlot.prod_fdt DESC
	</select>
	
	<!-- 출고 검색 -->
	<select id="searchWrnOut" resultType="map">
		SELECT	pdlot.prod_lot AS "완제품LOT",
    	    	pdlot.prod_cd AS "제품코드",
        		pd.prod_nm AS "제품명",
        		pdw.prod_wrqty AS "출고량",
        		TO_CHAR(pdw.prod_rdt,'YYYY-MM-DD') AS "출고일자",
        		TO_CHAR(pdlot.prod_exp,'YYYY-MM-DD') AS "유통기한"
		FROM	prod pd, prod_lot pdlot, prod_wrnote pdw
		WHERE	pdlot.prod_lot = pdw.prod_lot
		AND	    pd.prod_cd = pdlot.prod_cd
		AND     pdw.wr_cd LIKE 'INOUT02'
		<if test="pcd != ''">
		AND			pdlot.prod_cd LIKE #{pcd}
		</if>
		<if test="pcd == '' and pnm != ''">
		AND		    pd.prod_nm LIKE #{pnm}
		</if>		
		<if test="fdt1 != '' and fdt2 != ''">
		AND		    pdw.prod_rdt between TO_DATE(#{fdt1},'YYYY-MM-DD') AND TO_DATE(#{fdt2},'YYYY-MM-DD')			
		</if>
		ORDER BY pdw.prod_rdt DESC
	</select>
	
	<!-- 주문 상세 조회 -->
	<select id="ordDtpList" resultType="map">
		SELECT	ordtl.ordtl_cd AS "주문상세코드", 
					    ordtl.ord_cd AS "주문코드" , 
					    ordtl.prod_cd AS "완제품코드",
						ordtl.ord_qty AS "주문수량", 
						TO_CHAR(ord.res_dt,'YYYY-MM-DD') AS "납기일자", 
						pd.prod_nm AS "제품명"	
						
		FROM			ord_dtl ordtl, 
						orders ord,
						prod pd
						
		WHERE	ordtl.ord_cd = ord.ord_cd
		AND		ordtl.prod_cd = pd.prod_cd
		AND     ordtl.prog_cd NOT LIKE 'ORDTL02'
		AND     ordtl.prog_cd NOT LIKE 'PROG04'
		ORDER BY		ordtl.ord_cd DESC
	</select>
	
	<!-- 출고관리-완제품modal -->
	<select id="outProdModal" resultType="map">
		SELECT      pdlot.prod_lot AS "완제품LOT번호",
                	pd.prod_nm AS "완제품명",
                	pdc.prod_qty AS "완제품 현재고",                
                	TO_CHAR(pdlot.prod_fdt,'YYYY-MM-DD') AS "제조일자",
                	TO_CHAR(pdlot.prod_exp,'YYYY-MM-DD') AS "유통기한"
		FROM        ord_dtl ordtl, prod pd, prod_lot pdlot, prod_curqty pdc
		WHERE       ordtl.prod_cd = pd.prod_cd
		AND         pd.prod_cd = pdlot.prod_cd
		AND         pdc.prod_lot = pdlot.prod_lot
		AND         ordtl.ordtl_cd = #{key}
	</select>
	
	
	<insert statementType="CALLABLE" id="releaseOrder" parameterType="map">
	
		{CALL RELEASE_ORDER (#{prod_lot},#{prod_wrqty},#{ordtl_cd})}
		
	</insert>
	
	<update id="updateSafe" parameterType="map">
		UPDATE 	prod
		SET		prod_sfqty = #{safe}
		WHERE	prod_cd LIKE #{pcd}
	</update>
	
</mapper>